/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { ModalOptions } from "@ionic/core";
import { SiteShell } from "./store/views/site/shell/shellView.interface";
export namespace Components {
    interface App403 {
        "error403Labels": {
    error403Title: string;
    error403Text: string;
    error403Btn: string;
  };
    }
    interface App404 {
        "error404Labels": {
    error404Title: string;
    error404Text: string;
    error404Btn: string;
  };
    }
    interface App500 {
        "errorId": string;
    }
    interface AppRoot {
    }
    interface MfBanner {
    }
    interface MfHtml {
        "content": string;
    }
    interface MfLoader {
    }
    interface MfNavigation {
        "hideInstallBanner": () => Promise<void>;
        "navigateTo": (url: string) => Promise<void>;
        "navigation": {
    root: string;
    redirects: Array<{ from: string; to: string }>;
    routes: Array<{ url: string; component: string }>;
    menu?: {
      baseUrl: string;
      items: Array<{
        icon: string;
        labels: { [key: string]: string };
        component: string;
        name: string;
        url: string;
      }>;
      type: string;
    };
    route404: Array<{ url: string; component?: string }>;
  };
        "presentModal": (opts: ModalOptions) => Promise<HTMLIonModalElement>;
    }
    interface MfSection {
        "background": string;
    }
    interface MfSplash {
        "srcPath": string;
    }
    interface MfTabs {
        "tabs": Array<{
    component: string;
    name: string;
    icon: string;
    labels: { [key: string]: string };
  }>;
    }
    interface SiteBlogCard {
        "blogCardProps": {
    id:string;
    title: string;
    targetUrl: string;
    imgUrl: string;
    largeImgUrl: string;
    tag:string;
    introText: string;
    publishedAt: string;
  };
        "large": boolean;
    }
    interface SiteBlogCategories {
        "categories": Record<string, {title:string, text:string, label:string}>;
        "categoriesTitle": string;
        "filter": string;
    }
    interface SiteBlogDetail {
        "blogId": string;
    }
    interface SiteBlogNewsletter {
        "newsletterLabels": {
    title: string;
    text: string;
  };
    }
    interface SiteBlogProfile {
        "profile": {
    authorExpertise: string;
    authorName: string;
    authorProfileImg: string;
  };
    }
    interface SiteBlogShare {
    }
    interface SiteBlogSocial {
        "followLabel": string;
        "footerLinks": {
        linkedin_url: string;
        youtube_url: string;
        facebook_url: string;
        instagram_url: string;
        twitter_url: string;
      };
    }
    interface SiteCookieFooter {
        "cookieLabels": {
    title:string;
    btnLabel: string;
    text: string;
    moreInfoLabel: string;
  };
    }
    interface SiteExpertDetail {
    }
    interface SiteFooter {
        "shellData": SiteShell;
    }
    interface SiteHeader {
        "footerLinks": {
    linkedin_url: string;
    youtube_url: string;
    facebook_url: string;
    instagram_url: string;
    twitter_url: string;
  };
        "headerBackground": string;
        "menuItems": Array<{
    icon: string;
    labels: { [key: string]: string };
    component: string;
    name: string;
    url: string;
  }>;
    }
    interface SiteHomeAbout {
        "aboutData": {
    title: string;
    subTitle: string;
    descriptionStart: string;
    descriptionTag?: string;
    descriptionEnd?: string;
  };
    }
    interface SiteHomeAdvantages {
        "advantagesData": {
    title: string;
    subTitle: string;
    habits: {
      title: string;
      subTitle: string;
    };
    domains: {
      title: string;
      subTitle: string;
    };
    progress: {
      title: string;
      subTitle: string;
    };
    habitsImgUrl: string;
    domainsImgUrl: string;
    progressImgUrl: string;
  };
    }
    interface SiteHomeChallenges {
        "challengesData": {
    challengesImgUrl?: string;
    title: string;
    subTitle: string;
    descriptionStart: string;
    descriptionIntro?: string;
    descriptionTag?: string;
    descriptionEnd?: string;
  };
    }
    interface SiteHomeGetapp {
        "getappData": {
    imgUrl: string;
    qrCodeImgUrl: string;
    title: string;
    subTitle: string;
    availableLabel: string;
    downloadLabel: string;
    pwaImgUrl: string;
    soonStoreLabel: string;
    appStoreImgUrl: string;
    playStoreImgUrl: string;
  };
    }
    interface SiteHomeHero {
        "heroData": {
    title: string;
    subTitle: string;
    imgUrl: string;
    qrCodeImgUrl: string;
    startLabel: string;
    knowMoreLabel: string;
  };
    }
    interface SiteHomeMission {
        "missionData": {
    title: string;
    subTitle: string;
    descriptionStart: string;
    descriptionTag?: string;
    descriptionEnd?: string;
  };
    }
    interface SiteHomeQuest {
        "questData": {
    imgUrl?: string;
    title: string;
    subTitle: string;
    descriptionStart: string;
    descriptionIntro?: string;
    descriptionTag?: string;
    descriptionEnd?: string;
  };
    }
    interface SiteLanguageSelect {
        "selectOptions": { [key: string]: string };
        "selected": string;
    }
    interface SiteMobileMenu {
        "footerLinks": {
    linkedin_url: string;
    youtube_url: string;
    facebook_url: string;
    instagram_url: string;
    twitter_url: string;
  };
        "menuItems": Array<{
    icon: string;
    labels: {[key:string]:string};
    component: string;
    name:string;
    url: string;
  }>;
    }
    interface SitePageBlog {
    }
    interface SitePageDonation {
    }
    interface SitePageExpert {
    }
    interface SitePageHome {
    }
    interface SitePagePolicy {
    }
    interface SitePageQuest {
    }
    interface SitePageTerms {
    }
    interface SiteQuestDetail {
    }
}
export interface MfNavigationCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLMfNavigationElement;
}
export interface SiteBlogCategoriesCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLSiteBlogCategoriesElement;
}
export interface SiteCookieFooterCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLSiteCookieFooterElement;
}
export interface SiteHomeHeroCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLSiteHomeHeroElement;
}
export interface SiteLanguageSelectCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLSiteLanguageSelectElement;
}
export interface SiteMobileMenuCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLSiteMobileMenuElement;
}
declare global {
    interface HTMLApp403Element extends Components.App403, HTMLStencilElement {
    }
    var HTMLApp403Element: {
        prototype: HTMLApp403Element;
        new (): HTMLApp403Element;
    };
    interface HTMLApp404Element extends Components.App404, HTMLStencilElement {
    }
    var HTMLApp404Element: {
        prototype: HTMLApp404Element;
        new (): HTMLApp404Element;
    };
    interface HTMLApp500Element extends Components.App500, HTMLStencilElement {
    }
    var HTMLApp500Element: {
        prototype: HTMLApp500Element;
        new (): HTMLApp500Element;
    };
    interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {
    }
    var HTMLAppRootElement: {
        prototype: HTMLAppRootElement;
        new (): HTMLAppRootElement;
    };
    interface HTMLMfBannerElement extends Components.MfBanner, HTMLStencilElement {
    }
    var HTMLMfBannerElement: {
        prototype: HTMLMfBannerElement;
        new (): HTMLMfBannerElement;
    };
    interface HTMLMfHtmlElement extends Components.MfHtml, HTMLStencilElement {
    }
    var HTMLMfHtmlElement: {
        prototype: HTMLMfHtmlElement;
        new (): HTMLMfHtmlElement;
    };
    interface HTMLMfLoaderElement extends Components.MfLoader, HTMLStencilElement {
    }
    var HTMLMfLoaderElement: {
        prototype: HTMLMfLoaderElement;
        new (): HTMLMfLoaderElement;
    };
    interface HTMLMfNavigationElement extends Components.MfNavigation, HTMLStencilElement {
    }
    var HTMLMfNavigationElement: {
        prototype: HTMLMfNavigationElement;
        new (): HTMLMfNavigationElement;
    };
    interface HTMLMfSectionElement extends Components.MfSection, HTMLStencilElement {
    }
    var HTMLMfSectionElement: {
        prototype: HTMLMfSectionElement;
        new (): HTMLMfSectionElement;
    };
    interface HTMLMfSplashElement extends Components.MfSplash, HTMLStencilElement {
    }
    var HTMLMfSplashElement: {
        prototype: HTMLMfSplashElement;
        new (): HTMLMfSplashElement;
    };
    interface HTMLMfTabsElement extends Components.MfTabs, HTMLStencilElement {
    }
    var HTMLMfTabsElement: {
        prototype: HTMLMfTabsElement;
        new (): HTMLMfTabsElement;
    };
    interface HTMLSiteBlogCardElement extends Components.SiteBlogCard, HTMLStencilElement {
    }
    var HTMLSiteBlogCardElement: {
        prototype: HTMLSiteBlogCardElement;
        new (): HTMLSiteBlogCardElement;
    };
    interface HTMLSiteBlogCategoriesElement extends Components.SiteBlogCategories, HTMLStencilElement {
    }
    var HTMLSiteBlogCategoriesElement: {
        prototype: HTMLSiteBlogCategoriesElement;
        new (): HTMLSiteBlogCategoriesElement;
    };
    interface HTMLSiteBlogDetailElement extends Components.SiteBlogDetail, HTMLStencilElement {
    }
    var HTMLSiteBlogDetailElement: {
        prototype: HTMLSiteBlogDetailElement;
        new (): HTMLSiteBlogDetailElement;
    };
    interface HTMLSiteBlogNewsletterElement extends Components.SiteBlogNewsletter, HTMLStencilElement {
    }
    var HTMLSiteBlogNewsletterElement: {
        prototype: HTMLSiteBlogNewsletterElement;
        new (): HTMLSiteBlogNewsletterElement;
    };
    interface HTMLSiteBlogProfileElement extends Components.SiteBlogProfile, HTMLStencilElement {
    }
    var HTMLSiteBlogProfileElement: {
        prototype: HTMLSiteBlogProfileElement;
        new (): HTMLSiteBlogProfileElement;
    };
    interface HTMLSiteBlogShareElement extends Components.SiteBlogShare, HTMLStencilElement {
    }
    var HTMLSiteBlogShareElement: {
        prototype: HTMLSiteBlogShareElement;
        new (): HTMLSiteBlogShareElement;
    };
    interface HTMLSiteBlogSocialElement extends Components.SiteBlogSocial, HTMLStencilElement {
    }
    var HTMLSiteBlogSocialElement: {
        prototype: HTMLSiteBlogSocialElement;
        new (): HTMLSiteBlogSocialElement;
    };
    interface HTMLSiteCookieFooterElement extends Components.SiteCookieFooter, HTMLStencilElement {
    }
    var HTMLSiteCookieFooterElement: {
        prototype: HTMLSiteCookieFooterElement;
        new (): HTMLSiteCookieFooterElement;
    };
    interface HTMLSiteExpertDetailElement extends Components.SiteExpertDetail, HTMLStencilElement {
    }
    var HTMLSiteExpertDetailElement: {
        prototype: HTMLSiteExpertDetailElement;
        new (): HTMLSiteExpertDetailElement;
    };
    interface HTMLSiteFooterElement extends Components.SiteFooter, HTMLStencilElement {
    }
    var HTMLSiteFooterElement: {
        prototype: HTMLSiteFooterElement;
        new (): HTMLSiteFooterElement;
    };
    interface HTMLSiteHeaderElement extends Components.SiteHeader, HTMLStencilElement {
    }
    var HTMLSiteHeaderElement: {
        prototype: HTMLSiteHeaderElement;
        new (): HTMLSiteHeaderElement;
    };
    interface HTMLSiteHomeAboutElement extends Components.SiteHomeAbout, HTMLStencilElement {
    }
    var HTMLSiteHomeAboutElement: {
        prototype: HTMLSiteHomeAboutElement;
        new (): HTMLSiteHomeAboutElement;
    };
    interface HTMLSiteHomeAdvantagesElement extends Components.SiteHomeAdvantages, HTMLStencilElement {
    }
    var HTMLSiteHomeAdvantagesElement: {
        prototype: HTMLSiteHomeAdvantagesElement;
        new (): HTMLSiteHomeAdvantagesElement;
    };
    interface HTMLSiteHomeChallengesElement extends Components.SiteHomeChallenges, HTMLStencilElement {
    }
    var HTMLSiteHomeChallengesElement: {
        prototype: HTMLSiteHomeChallengesElement;
        new (): HTMLSiteHomeChallengesElement;
    };
    interface HTMLSiteHomeGetappElement extends Components.SiteHomeGetapp, HTMLStencilElement {
    }
    var HTMLSiteHomeGetappElement: {
        prototype: HTMLSiteHomeGetappElement;
        new (): HTMLSiteHomeGetappElement;
    };
    interface HTMLSiteHomeHeroElement extends Components.SiteHomeHero, HTMLStencilElement {
    }
    var HTMLSiteHomeHeroElement: {
        prototype: HTMLSiteHomeHeroElement;
        new (): HTMLSiteHomeHeroElement;
    };
    interface HTMLSiteHomeMissionElement extends Components.SiteHomeMission, HTMLStencilElement {
    }
    var HTMLSiteHomeMissionElement: {
        prototype: HTMLSiteHomeMissionElement;
        new (): HTMLSiteHomeMissionElement;
    };
    interface HTMLSiteHomeQuestElement extends Components.SiteHomeQuest, HTMLStencilElement {
    }
    var HTMLSiteHomeQuestElement: {
        prototype: HTMLSiteHomeQuestElement;
        new (): HTMLSiteHomeQuestElement;
    };
    interface HTMLSiteLanguageSelectElement extends Components.SiteLanguageSelect, HTMLStencilElement {
    }
    var HTMLSiteLanguageSelectElement: {
        prototype: HTMLSiteLanguageSelectElement;
        new (): HTMLSiteLanguageSelectElement;
    };
    interface HTMLSiteMobileMenuElement extends Components.SiteMobileMenu, HTMLStencilElement {
    }
    var HTMLSiteMobileMenuElement: {
        prototype: HTMLSiteMobileMenuElement;
        new (): HTMLSiteMobileMenuElement;
    };
    interface HTMLSitePageBlogElement extends Components.SitePageBlog, HTMLStencilElement {
    }
    var HTMLSitePageBlogElement: {
        prototype: HTMLSitePageBlogElement;
        new (): HTMLSitePageBlogElement;
    };
    interface HTMLSitePageDonationElement extends Components.SitePageDonation, HTMLStencilElement {
    }
    var HTMLSitePageDonationElement: {
        prototype: HTMLSitePageDonationElement;
        new (): HTMLSitePageDonationElement;
    };
    interface HTMLSitePageExpertElement extends Components.SitePageExpert, HTMLStencilElement {
    }
    var HTMLSitePageExpertElement: {
        prototype: HTMLSitePageExpertElement;
        new (): HTMLSitePageExpertElement;
    };
    interface HTMLSitePageHomeElement extends Components.SitePageHome, HTMLStencilElement {
    }
    var HTMLSitePageHomeElement: {
        prototype: HTMLSitePageHomeElement;
        new (): HTMLSitePageHomeElement;
    };
    interface HTMLSitePagePolicyElement extends Components.SitePagePolicy, HTMLStencilElement {
    }
    var HTMLSitePagePolicyElement: {
        prototype: HTMLSitePagePolicyElement;
        new (): HTMLSitePagePolicyElement;
    };
    interface HTMLSitePageQuestElement extends Components.SitePageQuest, HTMLStencilElement {
    }
    var HTMLSitePageQuestElement: {
        prototype: HTMLSitePageQuestElement;
        new (): HTMLSitePageQuestElement;
    };
    interface HTMLSitePageTermsElement extends Components.SitePageTerms, HTMLStencilElement {
    }
    var HTMLSitePageTermsElement: {
        prototype: HTMLSitePageTermsElement;
        new (): HTMLSitePageTermsElement;
    };
    interface HTMLSiteQuestDetailElement extends Components.SiteQuestDetail, HTMLStencilElement {
    }
    var HTMLSiteQuestDetailElement: {
        prototype: HTMLSiteQuestDetailElement;
        new (): HTMLSiteQuestDetailElement;
    };
    interface HTMLElementTagNameMap {
        "app-403": HTMLApp403Element;
        "app-404": HTMLApp404Element;
        "app-500": HTMLApp500Element;
        "app-root": HTMLAppRootElement;
        "mf-banner": HTMLMfBannerElement;
        "mf-html": HTMLMfHtmlElement;
        "mf-loader": HTMLMfLoaderElement;
        "mf-navigation": HTMLMfNavigationElement;
        "mf-section": HTMLMfSectionElement;
        "mf-splash": HTMLMfSplashElement;
        "mf-tabs": HTMLMfTabsElement;
        "site-blog-card": HTMLSiteBlogCardElement;
        "site-blog-categories": HTMLSiteBlogCategoriesElement;
        "site-blog-detail": HTMLSiteBlogDetailElement;
        "site-blog-newsletter": HTMLSiteBlogNewsletterElement;
        "site-blog-profile": HTMLSiteBlogProfileElement;
        "site-blog-share": HTMLSiteBlogShareElement;
        "site-blog-social": HTMLSiteBlogSocialElement;
        "site-cookie-footer": HTMLSiteCookieFooterElement;
        "site-expert-detail": HTMLSiteExpertDetailElement;
        "site-footer": HTMLSiteFooterElement;
        "site-header": HTMLSiteHeaderElement;
        "site-home-about": HTMLSiteHomeAboutElement;
        "site-home-advantages": HTMLSiteHomeAdvantagesElement;
        "site-home-challenges": HTMLSiteHomeChallengesElement;
        "site-home-getapp": HTMLSiteHomeGetappElement;
        "site-home-hero": HTMLSiteHomeHeroElement;
        "site-home-mission": HTMLSiteHomeMissionElement;
        "site-home-quest": HTMLSiteHomeQuestElement;
        "site-language-select": HTMLSiteLanguageSelectElement;
        "site-mobile-menu": HTMLSiteMobileMenuElement;
        "site-page-blog": HTMLSitePageBlogElement;
        "site-page-donation": HTMLSitePageDonationElement;
        "site-page-expert": HTMLSitePageExpertElement;
        "site-page-home": HTMLSitePageHomeElement;
        "site-page-policy": HTMLSitePagePolicyElement;
        "site-page-quest": HTMLSitePageQuestElement;
        "site-page-terms": HTMLSitePageTermsElement;
        "site-quest-detail": HTMLSiteQuestDetailElement;
    }
}
declare namespace LocalJSX {
    interface App403 {
        "error403Labels"?: {
    error403Title: string;
    error403Text: string;
    error403Btn: string;
  };
    }
    interface App404 {
        "error404Labels"?: {
    error404Title: string;
    error404Text: string;
    error404Btn: string;
  };
    }
    interface App500 {
        "errorId"?: string;
    }
    interface AppRoot {
    }
    interface MfBanner {
    }
    interface MfHtml {
        "content"?: string;
    }
    interface MfLoader {
    }
    interface MfNavigation {
        "navigation"?: {
    root: string;
    redirects: Array<{ from: string; to: string }>;
    routes: Array<{ url: string; component: string }>;
    menu?: {
      baseUrl: string;
      items: Array<{
        icon: string;
        labels: { [key: string]: string };
        component: string;
        name: string;
        url: string;
      }>;
      type: string;
    };
    route404: Array<{ url: string; component?: string }>;
  };
        "onDismissedInstall"?: (event: MfNavigationCustomEvent<any>) => void;
    }
    interface MfSection {
        "background"?: string;
    }
    interface MfSplash {
        "srcPath"?: string;
    }
    interface MfTabs {
        "tabs"?: Array<{
    component: string;
    name: string;
    icon: string;
    labels: { [key: string]: string };
  }>;
    }
    interface SiteBlogCard {
        "blogCardProps"?: {
    id:string;
    title: string;
    targetUrl: string;
    imgUrl: string;
    largeImgUrl: string;
    tag:string;
    introText: string;
    publishedAt: string;
  };
        "large"?: boolean;
    }
    interface SiteBlogCategories {
        "categories"?: Record<string, {title:string, text:string, label:string}>;
        "categoriesTitle"?: string;
        "filter"?: string;
        "onFilterCategories"?: (event: SiteBlogCategoriesCustomEvent<any>) => void;
    }
    interface SiteBlogDetail {
        "blogId"?: string;
    }
    interface SiteBlogNewsletter {
        "newsletterLabels"?: {
    title: string;
    text: string;
  };
    }
    interface SiteBlogProfile {
        "profile"?: {
    authorExpertise: string;
    authorName: string;
    authorProfileImg: string;
  };
    }
    interface SiteBlogShare {
    }
    interface SiteBlogSocial {
        "followLabel"?: string;
        "footerLinks"?: {
        linkedin_url: string;
        youtube_url: string;
        facebook_url: string;
        instagram_url: string;
        twitter_url: string;
      };
    }
    interface SiteCookieFooter {
        "cookieLabels"?: {
    title:string;
    btnLabel: string;
    text: string;
    moreInfoLabel: string;
  };
        "onCookieAgreement"?: (event: SiteCookieFooterCustomEvent<any>) => void;
    }
    interface SiteExpertDetail {
    }
    interface SiteFooter {
        "shellData"?: SiteShell;
    }
    interface SiteHeader {
        "footerLinks"?: {
    linkedin_url: string;
    youtube_url: string;
    facebook_url: string;
    instagram_url: string;
    twitter_url: string;
  };
        "headerBackground"?: string;
        "menuItems"?: Array<{
    icon: string;
    labels: { [key: string]: string };
    component: string;
    name: string;
    url: string;
  }>;
    }
    interface SiteHomeAbout {
        "aboutData"?: {
    title: string;
    subTitle: string;
    descriptionStart: string;
    descriptionTag?: string;
    descriptionEnd?: string;
  };
    }
    interface SiteHomeAdvantages {
        "advantagesData"?: {
    title: string;
    subTitle: string;
    habits: {
      title: string;
      subTitle: string;
    };
    domains: {
      title: string;
      subTitle: string;
    };
    progress: {
      title: string;
      subTitle: string;
    };
    habitsImgUrl: string;
    domainsImgUrl: string;
    progressImgUrl: string;
  };
    }
    interface SiteHomeChallenges {
        "challengesData"?: {
    challengesImgUrl?: string;
    title: string;
    subTitle: string;
    descriptionStart: string;
    descriptionIntro?: string;
    descriptionTag?: string;
    descriptionEnd?: string;
  };
    }
    interface SiteHomeGetapp {
        "getappData"?: {
    imgUrl: string;
    qrCodeImgUrl: string;
    title: string;
    subTitle: string;
    availableLabel: string;
    downloadLabel: string;
    pwaImgUrl: string;
    soonStoreLabel: string;
    appStoreImgUrl: string;
    playStoreImgUrl: string;
  };
    }
    interface SiteHomeHero {
        "heroData"?: {
    title: string;
    subTitle: string;
    imgUrl: string;
    qrCodeImgUrl: string;
    startLabel: string;
    knowMoreLabel: string;
  };
        "onScrollAccessApp"?: (event: SiteHomeHeroCustomEvent<any>) => void;
        "onScrollMore"?: (event: SiteHomeHeroCustomEvent<any>) => void;
    }
    interface SiteHomeMission {
        "missionData"?: {
    title: string;
    subTitle: string;
    descriptionStart: string;
    descriptionTag?: string;
    descriptionEnd?: string;
  };
    }
    interface SiteHomeQuest {
        "questData"?: {
    imgUrl?: string;
    title: string;
    subTitle: string;
    descriptionStart: string;
    descriptionIntro?: string;
    descriptionTag?: string;
    descriptionEnd?: string;
  };
    }
    interface SiteLanguageSelect {
        "onSelectChanged"?: (event: SiteLanguageSelectCustomEvent<any>) => void;
        "selectOptions"?: { [key: string]: string };
        "selected"?: string;
    }
    interface SiteMobileMenu {
        "footerLinks"?: {
    linkedin_url: string;
    youtube_url: string;
    facebook_url: string;
    instagram_url: string;
    twitter_url: string;
  };
        "menuItems"?: Array<{
    icon: string;
    labels: {[key:string]:string};
    component: string;
    name:string;
    url: string;
  }>;
        "onDismissMenu"?: (event: SiteMobileMenuCustomEvent<any>) => void;
    }
    interface SitePageBlog {
    }
    interface SitePageDonation {
    }
    interface SitePageExpert {
    }
    interface SitePageHome {
    }
    interface SitePagePolicy {
    }
    interface SitePageQuest {
    }
    interface SitePageTerms {
    }
    interface SiteQuestDetail {
    }
    interface IntrinsicElements {
        "app-403": App403;
        "app-404": App404;
        "app-500": App500;
        "app-root": AppRoot;
        "mf-banner": MfBanner;
        "mf-html": MfHtml;
        "mf-loader": MfLoader;
        "mf-navigation": MfNavigation;
        "mf-section": MfSection;
        "mf-splash": MfSplash;
        "mf-tabs": MfTabs;
        "site-blog-card": SiteBlogCard;
        "site-blog-categories": SiteBlogCategories;
        "site-blog-detail": SiteBlogDetail;
        "site-blog-newsletter": SiteBlogNewsletter;
        "site-blog-profile": SiteBlogProfile;
        "site-blog-share": SiteBlogShare;
        "site-blog-social": SiteBlogSocial;
        "site-cookie-footer": SiteCookieFooter;
        "site-expert-detail": SiteExpertDetail;
        "site-footer": SiteFooter;
        "site-header": SiteHeader;
        "site-home-about": SiteHomeAbout;
        "site-home-advantages": SiteHomeAdvantages;
        "site-home-challenges": SiteHomeChallenges;
        "site-home-getapp": SiteHomeGetapp;
        "site-home-hero": SiteHomeHero;
        "site-home-mission": SiteHomeMission;
        "site-home-quest": SiteHomeQuest;
        "site-language-select": SiteLanguageSelect;
        "site-mobile-menu": SiteMobileMenu;
        "site-page-blog": SitePageBlog;
        "site-page-donation": SitePageDonation;
        "site-page-expert": SitePageExpert;
        "site-page-home": SitePageHome;
        "site-page-policy": SitePagePolicy;
        "site-page-quest": SitePageQuest;
        "site-page-terms": SitePageTerms;
        "site-quest-detail": SiteQuestDetail;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "app-403": LocalJSX.App403 & JSXBase.HTMLAttributes<HTMLApp403Element>;
            "app-404": LocalJSX.App404 & JSXBase.HTMLAttributes<HTMLApp404Element>;
            "app-500": LocalJSX.App500 & JSXBase.HTMLAttributes<HTMLApp500Element>;
            "app-root": LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
            "mf-banner": LocalJSX.MfBanner & JSXBase.HTMLAttributes<HTMLMfBannerElement>;
            "mf-html": LocalJSX.MfHtml & JSXBase.HTMLAttributes<HTMLMfHtmlElement>;
            "mf-loader": LocalJSX.MfLoader & JSXBase.HTMLAttributes<HTMLMfLoaderElement>;
            "mf-navigation": LocalJSX.MfNavigation & JSXBase.HTMLAttributes<HTMLMfNavigationElement>;
            "mf-section": LocalJSX.MfSection & JSXBase.HTMLAttributes<HTMLMfSectionElement>;
            "mf-splash": LocalJSX.MfSplash & JSXBase.HTMLAttributes<HTMLMfSplashElement>;
            "mf-tabs": LocalJSX.MfTabs & JSXBase.HTMLAttributes<HTMLMfTabsElement>;
            "site-blog-card": LocalJSX.SiteBlogCard & JSXBase.HTMLAttributes<HTMLSiteBlogCardElement>;
            "site-blog-categories": LocalJSX.SiteBlogCategories & JSXBase.HTMLAttributes<HTMLSiteBlogCategoriesElement>;
            "site-blog-detail": LocalJSX.SiteBlogDetail & JSXBase.HTMLAttributes<HTMLSiteBlogDetailElement>;
            "site-blog-newsletter": LocalJSX.SiteBlogNewsletter & JSXBase.HTMLAttributes<HTMLSiteBlogNewsletterElement>;
            "site-blog-profile": LocalJSX.SiteBlogProfile & JSXBase.HTMLAttributes<HTMLSiteBlogProfileElement>;
            "site-blog-share": LocalJSX.SiteBlogShare & JSXBase.HTMLAttributes<HTMLSiteBlogShareElement>;
            "site-blog-social": LocalJSX.SiteBlogSocial & JSXBase.HTMLAttributes<HTMLSiteBlogSocialElement>;
            "site-cookie-footer": LocalJSX.SiteCookieFooter & JSXBase.HTMLAttributes<HTMLSiteCookieFooterElement>;
            "site-expert-detail": LocalJSX.SiteExpertDetail & JSXBase.HTMLAttributes<HTMLSiteExpertDetailElement>;
            "site-footer": LocalJSX.SiteFooter & JSXBase.HTMLAttributes<HTMLSiteFooterElement>;
            "site-header": LocalJSX.SiteHeader & JSXBase.HTMLAttributes<HTMLSiteHeaderElement>;
            "site-home-about": LocalJSX.SiteHomeAbout & JSXBase.HTMLAttributes<HTMLSiteHomeAboutElement>;
            "site-home-advantages": LocalJSX.SiteHomeAdvantages & JSXBase.HTMLAttributes<HTMLSiteHomeAdvantagesElement>;
            "site-home-challenges": LocalJSX.SiteHomeChallenges & JSXBase.HTMLAttributes<HTMLSiteHomeChallengesElement>;
            "site-home-getapp": LocalJSX.SiteHomeGetapp & JSXBase.HTMLAttributes<HTMLSiteHomeGetappElement>;
            "site-home-hero": LocalJSX.SiteHomeHero & JSXBase.HTMLAttributes<HTMLSiteHomeHeroElement>;
            "site-home-mission": LocalJSX.SiteHomeMission & JSXBase.HTMLAttributes<HTMLSiteHomeMissionElement>;
            "site-home-quest": LocalJSX.SiteHomeQuest & JSXBase.HTMLAttributes<HTMLSiteHomeQuestElement>;
            "site-language-select": LocalJSX.SiteLanguageSelect & JSXBase.HTMLAttributes<HTMLSiteLanguageSelectElement>;
            "site-mobile-menu": LocalJSX.SiteMobileMenu & JSXBase.HTMLAttributes<HTMLSiteMobileMenuElement>;
            "site-page-blog": LocalJSX.SitePageBlog & JSXBase.HTMLAttributes<HTMLSitePageBlogElement>;
            "site-page-donation": LocalJSX.SitePageDonation & JSXBase.HTMLAttributes<HTMLSitePageDonationElement>;
            "site-page-expert": LocalJSX.SitePageExpert & JSXBase.HTMLAttributes<HTMLSitePageExpertElement>;
            "site-page-home": LocalJSX.SitePageHome & JSXBase.HTMLAttributes<HTMLSitePageHomeElement>;
            "site-page-policy": LocalJSX.SitePagePolicy & JSXBase.HTMLAttributes<HTMLSitePagePolicyElement>;
            "site-page-quest": LocalJSX.SitePageQuest & JSXBase.HTMLAttributes<HTMLSitePageQuestElement>;
            "site-page-terms": LocalJSX.SitePageTerms & JSXBase.HTMLAttributes<HTMLSitePageTermsElement>;
            "site-quest-detail": LocalJSX.SiteQuestDetail & JSXBase.HTMLAttributes<HTMLSiteQuestDetailElement>;
        }
    }
}
